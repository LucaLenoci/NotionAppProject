{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProjelerim\\\\todoAppProject\\\\todo_frontend\\\\src\\\\Sidebar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { List, ListItemText, ListItemIcon, ListItemButton, Button } from '@mui/material';\nimport { AddCircleOutlineRounded, FolderOpenOutlined } from '@mui/icons-material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  notes,\n  onNoteClick,\n  onCreate\n}) => {\n  _s();\n  const [newTitle, setNewTitle] = useState('New Post');\n  const [newContent, setNewContent] = useState(' ');\n  const handleAddNote = async () => {\n    if (!newTitle || !newContent) return;\n    try {\n      const response = await axios.post('http://localhost:3000/notes', {\n        title: newTitle,\n        content: newContent\n      });\n      console.log('Note created successfully:', response.data);\n      if (onCreate) onCreate(response.data.title, response.data.content); // Pass ID to parent component\n      setNewTitle('New Post');\n      setNewContent(' ');\n    } catch (error) {\n      console.error('Error creating note:', error);\n      // Handle errors appropriately (e.g., display error message to user)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(List, {\n    sx: {\n      width: 250,\n      bgcolor: 'background.paper'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      component: \"label\",\n      role: undefined,\n      variant: \"contained\",\n      tabIndex: -1,\n      startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineRounded, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this),\n      onClick: handleAddNote,\n      children: \"Add A New Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(ListItemButton, {\n      onClick: () => onNoteClick(note.id),\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: /*#__PURE__*/_jsxDEV(FolderOpenOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"9VoA98iTpd5zn68wGxnOUBr2iPA=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","List","ListItemText","ListItemIcon","ListItemButton","Button","AddCircleOutlineRounded","FolderOpenOutlined","axios","jsxDEV","_jsxDEV","Sidebar","notes","onNoteClick","onCreate","_s","newTitle","setNewTitle","newContent","setNewContent","handleAddNote","response","post","title","content","console","log","data","error","sx","width","bgcolor","children","component","role","undefined","variant","tabIndex","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","note","id","primary","_c","$RefreshReg$"],"sources":["D:/WebProjelerim/todoAppProject/todo_frontend/src/Sidebar.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { List, ListItemText, ListItemIcon, ListItemButton, Button } from '@mui/material';\r\nimport { AddCircleOutlineRounded, FolderOpenOutlined } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport Note from './Interfaces';\r\n\r\ninterface SidebarProps {\r\n  notes: Note[];\r\n  onNoteClick: (id: number) => void; // Function to handle note selection\r\n  onCreate?: (title: string, content: string) => void;\r\n}\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ notes, onNoteClick, onCreate }) => {\r\n  \r\n  const [newTitle, setNewTitle] = useState('New Post');\r\n  const [newContent, setNewContent] = useState(' ');\r\n\r\n  const handleAddNote = async () => {\r\n    if (!newTitle || !newContent) return;\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/notes', {\r\n        title: newTitle,\r\n        content: newContent,\r\n      });\r\n      console.log('Note created successfully:', response.data);\r\n      if(onCreate) onCreate(response.data.title, response.data.content); // Pass ID to parent component\r\n      setNewTitle('New Post');\r\n      setNewContent(' ');\r\n    } catch (error) {\r\n      console.error('Error creating note:', error);\r\n      // Handle errors appropriately (e.g., display error message to user)\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <List sx={{ width: 250, bgcolor: 'background.paper' }}>\r\n      <Button\r\n      component=\"label\"\r\n      role={undefined}\r\n      variant=\"contained\"\r\n      tabIndex={-1}\r\n      startIcon={<AddCircleOutlineRounded/>}\r\n      onClick={handleAddNote}\r\n      >\r\n      Add A New Note\r\n      </Button>\r\n      {notes.map((note) => (\r\n        <ListItemButton key={note.id} onClick={() => onNoteClick(note.id)}>\r\n          <ListItemIcon>\r\n            <FolderOpenOutlined />\r\n          </ListItemIcon>\r\n          <ListItemText primary={note.title} />\r\n        </ListItemButton>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}