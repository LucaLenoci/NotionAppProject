{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProjelerim\\\\todoAppProject\\\\todo_frontend\\\\src\\\\MainPage.tsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Note from './Note';\n\n// Sample note data (replace with your data fetching logic)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst notes = [{\n  title: 'Note 1',\n  id: 'note-1'\n}, {\n  title: 'Note 2',\n  id: 'note-2'\n}, {\n  title: 'Note 3',\n  id: 'note-3'\n}];\nconst MainPage = () => {\n  _s();\n  const [selectedNoteId, setSelectedNoteId] = useState(null);\n  const handleNoteClick = id => {\n    setSelectedNoteId(id);\n  };\n  const selectedNote = notes.find(note => note.id === selectedNoteId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        variant: \"dense\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"inherit\",\n          children: \"My Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        onNoteClick: handleNoteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), selectedNote && /*#__PURE__*/_jsxDEV(Note, {\n        title: selectedNote.title,\n        content: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 28\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n_s(MainPage, \"vBhiPmD0/11liLxAhiouwlWaD3Q=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["Note","jsxDEV","_jsxDEV","notes","title","id","MainPage","_s","selectedNoteId","setSelectedNoteId","useState","handleNoteClick","selectedNote","find","note","children","AppBar","position","Toolbar","variant","Typography","color","fileName","_jsxFileName","lineNumber","columnNumber","Box","sx","display","Sidebar","onNoteClick","Divider","flexGrow","content","_c","$RefreshReg$"],"sources":["D:/WebProjelerim/todoAppProject/todo_frontend/src/MainPage.tsx"],"sourcesContent":["import './App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Note from './Note';\r\n\r\n\r\n// Sample note data (replace with your data fetching logic)\r\nconst notes = [\r\n    { title: 'Note 1', id: 'note-1' },\r\n    { title: 'Note 2', id: 'note-2' },\r\n    { title: 'Note 3', id: 'note-3' },\r\n];\r\n\r\nconst MainPage = () => {\r\n    const [selectedNoteId, setSelectedNoteId] = useState<string | null>(null);\r\n  \r\n    const handleNoteClick = (id: string) => {\r\n      setSelectedNoteId(id);\r\n    };\r\n  \r\n    const selectedNote = notes.find((note) => note.id === selectedNoteId);\r\n  \r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\">\r\n          <Toolbar variant=\"dense\">\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              My Notes\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Box sx={{ display: 'flex' }}>\r\n          <Sidebar notes={notes} onNoteClick={handleNoteClick} />\r\n          <Divider sx={{ flexGrow: 1 }} />\r\n          {selectedNote && <Note title={selectedNote.title} content=\"\" />} {/* Replace with actual content */}\r\n        </Box>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default MainPage;"],"mappings":";;AAAA,OAAO,WAAW;AAElB,OAAOA,IAAI,MAAM,QAAQ;;AAGzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAG,CACV;EAAEC,KAAK,EAAE,QAAQ;EAAEC,EAAE,EAAE;AAAS,CAAC,EACjC;EAAED,KAAK,EAAE,QAAQ;EAAEC,EAAE,EAAE;AAAS,CAAC,EACjC;EAAED,KAAK,EAAE,QAAQ;EAAEC,EAAE,EAAE;AAAS,CAAC,CACpC;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGC,QAAQ,CAAgB,IAAI,CAAC;EAEzE,MAAMC,eAAe,GAAIN,EAAU,IAAK;IACtCI,iBAAiB,CAACJ,EAAE,CAAC;EACvB,CAAC;EAED,MAAMO,YAAY,GAAGT,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACT,EAAE,KAAKG,cAAc,CAAC;EAErE,oBACEN,OAAA;IAAAa,QAAA,gBACEb,OAAA,CAACc,MAAM;MAACC,QAAQ,EAAC,QAAQ;MAAAF,QAAA,eACvBb,OAAA,CAACgB,OAAO;QAACC,OAAO,EAAC,OAAO;QAAAJ,QAAA,eACtBb,OAAA,CAACkB,UAAU;UAACD,OAAO,EAAC,IAAI;UAACE,KAAK,EAAC,SAAS;UAAAN,QAAA,EAAC;QAEzC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACTvB,OAAA,CAACwB,GAAG;MAACC,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAb,QAAA,gBAC3Bb,OAAA,CAAC2B,OAAO;QAAC1B,KAAK,EAAEA,KAAM;QAAC2B,WAAW,EAAEnB;MAAgB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDvB,OAAA,CAAC6B,OAAO;QAACJ,EAAE,EAAE;UAAEK,QAAQ,EAAE;QAAE;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC/Bb,YAAY,iBAAIV,OAAA,CAACF,IAAI;QAACI,KAAK,EAAEQ,YAAY,CAACR,KAAM;QAAC6B,OAAO,EAAC;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAAC,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzBED,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}