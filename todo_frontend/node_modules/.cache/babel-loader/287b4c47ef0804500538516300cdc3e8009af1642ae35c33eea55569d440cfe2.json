{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProjelerim\\\\todoAppProject\\\\todo_frontend\\\\src\\\\reactDraft\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { convertFromRaw, EditorState } from \"draft-js\";\nimport { useEffect, useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Index = ({\n  content,\n  onUpdate\n}) => {\n  _s();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const onEditorStateChange = function (editorState) {\n    setEditorState(editorState);\n    // const { blocks } = convertToRaw(editorState.getCurrentContent());\n    /*let text = blocks.reduce((acc, item) => {\r\n      acc = acc + item.text;\r\n      return acc;\r\n    }, \"\");*/\n    const theCurrentText = editorState.getCurrentContent().getPlainText(\"\\u0001\");\n    console.log(theCurrentText);\n    // content = text;\n    onUpdate(theCurrentText);\n  };\n  useEffect(() => {\n    if (content) {\n      const contentState = convertFromRaw(JSON.parse(content));\n      setEditorState(EditorState.createWithContent(contentState));\n    }\n  }, [content]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"80px\",\n        overflow: \"auto\"\n      },\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      toolbarClassName: \"toolbarClassName\",\n      wrapperClassName: \"wrapperClassName\",\n      editorClassName: \"editorClassName\",\n      onEditorStateChange: onEditorStateChange,\n      mention: {\n        separator: \" \",\n        trigger: \"@\",\n        suggestions: [{\n          text: \"APPLE\",\n          value: \"apple\"\n        }, {\n          text: \"BANANA\",\n          value: \"banana\",\n          url: \"banana\"\n        }, {\n          text: \"CHERRY\",\n          value: \"cherry\",\n          url: \"cherry\"\n        }, {\n          text: \"DURIAN\",\n          value: \"durian\",\n          url: \"durian\"\n        }, {\n          text: \"EGGFRUIT\",\n          value: \"eggfruit\",\n          url: \"eggfruit\"\n        }, {\n          text: \"FIG\",\n          value: \"fig\",\n          url: \"fig\"\n        }, {\n          text: \"GRAPEFRUIT\",\n          value: \"grapefruit\",\n          url: \"grapefruit\"\n        }, {\n          text: \"HONEYDEW\",\n          value: \"honeydew\",\n          url: \"honeydew\"\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Index, \"H1S//Kawa6VxNjMXli63CJgW1YE=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["convertFromRaw","EditorState","useEffect","useState","Editor","jsxDEV","_jsxDEV","Fragment","_Fragment","Index","content","onUpdate","_s","editorState","setEditorState","createEmpty","onEditorStateChange","theCurrentText","getCurrentContent","getPlainText","console","log","contentState","JSON","parse","createWithContent","children","style","height","overflow","fileName","_jsxFileName","lineNumber","columnNumber","toolbarClassName","wrapperClassName","editorClassName","mention","separator","trigger","suggestions","text","value","url","_c","$RefreshReg$"],"sources":["D:/WebProjelerim/todoAppProject/todo_frontend/src/reactDraft/index.tsx"],"sourcesContent":["import { convertFromRaw, EditorState } from \"draft-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { NoteContentProps } from \"../Interfaces\";\r\n\r\nconst Index : React.FC<NoteContentProps> = ({content, onUpdate }) => {\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n    const onEditorStateChange = function (editorState : EditorState) {\r\n      setEditorState(editorState);\r\n      // const { blocks } = convertToRaw(editorState.getCurrentContent());\r\n      /*let text = blocks.reduce((acc, item) => {\r\n        acc = acc + item.text;\r\n        return acc;\r\n      }, \"\");*/\r\n      const theCurrentText = editorState.getCurrentContent().getPlainText(\"\\u0001\");\r\n      console.log(theCurrentText);\r\n      // content = text;\r\n      onUpdate(theCurrentText);\r\n    };\r\n    \r\n    useEffect(() => {\r\n      if (content) {\r\n        const contentState = convertFromRaw(JSON.parse(content));\r\n        setEditorState(EditorState.createWithContent(contentState));\r\n      }\r\n    }, [content]);\r\n  \r\n    return (\r\n      <>\r\n        {<div style={{ height: \"80px\", overflow: \"auto\" }}>{content}</div>}\r\n        <Editor\r\n          editorState={editorState}\r\n          toolbarClassName=\"toolbarClassName\"\r\n          wrapperClassName=\"wrapperClassName\"\r\n          editorClassName=\"editorClassName\"\r\n          onEditorStateChange={onEditorStateChange}\r\n          mention={{\r\n            separator: \" \",\r\n            trigger: \"@\",\r\n            suggestions: [\r\n              { text: \"APPLE\", value: \"apple\" },\r\n              { text: \"BANANA\", value: \"banana\", url: \"banana\" },\r\n              { text: \"CHERRY\", value: \"cherry\", url: \"cherry\" },\r\n              { text: \"DURIAN\", value: \"durian\", url: \"durian\" },\r\n              { text: \"EGGFRUIT\", value: \"eggfruit\", url: \"eggfruit\" },\r\n              { text: \"FIG\", value: \"fig\", url: \"fig\" },\r\n              { text: \"GRAPEFRUIT\", value: \"grapefruit\", url: \"grapefruit\" },\r\n              { text: \"HONEYDEW\", value: \"honeydew\", url: \"honeydew\" }\r\n            ]\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default Index;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}